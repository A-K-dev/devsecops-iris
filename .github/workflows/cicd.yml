name: ci-cd

# run the action on pull_requests and pushes
on: [pull_request, push]

jobs:
  # first job to test the application using pytest
  build:
    runs-on: ubuntu-latest # choose the OS for running the action
    # define the individual sequential steps to be run
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Setup python
        uses: actions/setup-python@v2
        with:
          python-version: 3.8
      - name: Install dependencies
        run: |
          pip install -r requirements.txt
      - name: Run pytest
        run: |
          pytest

  # codecoverage:
  #   runs-on: ubuntu-latest # choose the OS for running the action
  #   strategy:
  #     matrix: 
  #       python: ['3.7', '3.8', '3.9']
  #   env:
  #     PYTHON: ${{ matrix.python }}
  #   # define the individual sequential steps to be run
  #   steps:
  #     - name: Checkout the repository
  #       uses: actions/checkout@v2
  #     - name: Setup python
  #       uses: actions/setup-python@v2
  #       with:
  #         python-version: ${{ matrix.python }}
  #     - name: Install dependencies
  #       run: |
  #         pip install -r requirements.txt
  #     - name: Generate coverage report
  #       run: |
  #         pip install pytest-cov
  #         pytest --cov=./ --cov-report=xml
  #         cat coverage.xml
  #     - name: Upload coverage to Codecov
  #       uses: codecov/codecov-action@v2
  #       with:
  #         # env_vars: PYTHON
  #         fail_ci_if_error: true
  #         verbose: true

  container-security:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v1
      - name: build local container
        uses: docker/build-push-action@v2
        with:
          tags: localbuild/testimage:latest
          context: .
          push: false
          load: true
      - name: Scan image
        uses: anchore/scan-action@v3
        with:
          image: "localbuild/testimage:latest"
          fail-build: false
          severity-cutoff: medium

      - name: Upload artifact
        uses: actions/upload-artifact@v1.0.0
        with:
          name: AnchoreReports
          path: ./anchore-reports/
  
  # second job to zip the codebase and upload it as an artifact when build succeeds 
  upload_zip:
    runs-on: ubuntu-latest # choose the OS for running the action
    needs: build
    
    # only run this action for pushes
    if: ${{ github.event_name == 'push' }}

    # define the individual sequential steps to be run
    steps:
      - name: Checkout the repository
        uses: actions/checkout@v2
      - name: Zip the code
        run: |
          zip -r release.zip . -x ".git/*" ".github/*" ".gitignore"
      - name: Upload artifact
        uses: actions/upload-artifact@v2
        with:
          name: code-release
          path: release.zip
